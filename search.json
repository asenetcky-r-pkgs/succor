[{"path":"https://asenetcky-r-pkgs.github.io/succor/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 succor authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Senetcky. Author, maintainer, copyright holder.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Senetcky (2025). succor: Common Solutions Common Usecases. R package version 0.9.0, https://asenetcky-r-pkgs.github.io/succor/.","code":"@Manual{,   title = {succor: Common Solutions for Common Usecases},   author = {Alexander Senetcky},   year = {2025},   note = {R package version 0.9.0},   url = {https://asenetcky-r-pkgs.github.io/succor/}, }"},{"path":"https://asenetcky-r-pkgs.github.io/succor/index.html","id":"succor","dir":"","previous_headings":"","what":"Common Solutions for Common Usecases","title":"Common Solutions for Common Usecases","text":"goal succor …","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Common Solutions for Common Usecases","text":"can install development version succor GitHub :","code":"# install.packages(\"pak\") pak::pak(\"asenetcky-r-pkgs/succor\")"},{"path":"https://asenetcky-r-pkgs.github.io/succor/index.html","id":"data-helpers","dir":"","previous_headings":"","what":"Data helpers","title":"Common Solutions for Common Usecases","text":"","code":"library(succor) library(purrr) suppressPackageStartupMessages(library(dplyr))  # is it a dataframe, with data? is_dataframe_with_data(mtcars) #> [1] TRUE  is_dataframe_with_data(mtcars[0, ]) #> [1] FALSE  # you can assert or throw errors as well assert_dataframe_with_data(mtcars) safe_assert <- purrr::safely(assert_dataframe_with_data)  captured <- safe_assert(mtcars[0, ]) captured$error$message #> [1] \"Assertion on '.data' failed: Must have at least 1 rows, but has 0 rows.\""},{"path":"https://asenetcky-r-pkgs.github.io/succor/index.html","id":"test-and-environment-helpers","dir":"","previous_headings":"","what":"Test and Environment Helpers","title":"Common Solutions for Common Usecases","text":"","code":"library(testthat) #>  #> Attaching package: 'testthat' #> The following object is masked from 'package:dplyr': #>  #>     matches #> The following object is masked from 'package:purrr': #>  #>     is_null # is the current session on a linux machine? is_linux() #> [1] TRUE  # this is useful for unit testing testthat::test_that(\"test runs when on linux\", {   skip_if_not_linux()   testthat::expect_true(TRUE) }) #> ── Skip: test runs when on linux ─────────────────────────────────────────────── #> Reason: This test is only for linux."},{"path":"https://asenetcky-r-pkgs.github.io/succor/index.html","id":"miscellaneous-helpers","dir":"","previous_headings":"","what":"Miscellaneous Helpers","title":"Common Solutions for Common Usecases","text":"","code":"library(stringr)  # make a datekey for dimension wrangling Sys.Date() #> [1] \"2025-04-15\"  make_datekey(Sys.Date()) #> [1] 20250415  # Standardized timestamps # Always the same format, length and delimiters make_timestamp() #> [1] \"2025-04-15 20:46:09.0419\"  # Mass rename dataframe column names to something more sensible # that you can pile on you own standards after  cursed_names <-   dplyr::tibble(     COLUMN1 = 1:10,     CoLuMn2 = 1:10,     `Column    3` = 1:10,     `    ColumN   4    ` = 1:10   )  colnames(cursed_names) #> [1] \"COLUMN1\"            \"CoLuMn2\"            \"Column    3\"        #> [4] \"    ColumN   4    \"  cursed_names |>   rename_with_stringr() |>   colnames() #> [1] \"column1\"  \"column2\"  \"column 3\" \"column 4\"  cursed_names |>   rename_with_stringr() |>   dplyr::rename_with(     .fn = \\(col) {       stringr::str_remove_all(col, \" \")     }   ) |>   colnames() #> [1] \"column1\" \"column2\" \"column3\" \"column4\""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/assert_dataframe_with_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert Object is a Dataframe with at least one row of data — assert_dataframe_with_data","title":"Assert Object is a Dataframe with at least one row of data — assert_dataframe_with_data","text":"Assert Object Dataframe least one row data","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/assert_dataframe_with_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert Object is a Dataframe with at least one row of data — assert_dataframe_with_data","text":"","code":"assert_dataframe_with_data(.data)"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/assert_dataframe_with_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert Object is a Dataframe with at least one row of data — assert_dataframe_with_data","text":".data Dataframe.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/assert_dataframe_with_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert Object is a Dataframe with at least one row of data — assert_dataframe_with_data","text":"successful, returns .data invisibly otherwise throws error.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/assert_dataframe_with_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert Object is a Dataframe with at least one row of data — assert_dataframe_with_data","text":"","code":"assert_dataframe_with_data(mtcars)"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_dataframe_with_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if Object is a Dataframe with at least one row of data — is_dataframe_with_data","title":"Test if Object is a Dataframe with at least one row of data — is_dataframe_with_data","text":"Test Object Dataframe least one row data","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_dataframe_with_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if Object is a Dataframe with at least one row of data — is_dataframe_with_data","text":"","code":"is_dataframe_with_data(.data)"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_dataframe_with_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if Object is a Dataframe with at least one row of data — is_dataframe_with_data","text":".data Dataframe.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_dataframe_with_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if Object is a Dataframe with at least one row of data — is_dataframe_with_data","text":"Bool, TRUE object Dataframe FALSEif object Dataframe.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_dataframe_with_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if Object is a Dataframe with at least one row of data — is_dataframe_with_data","text":"","code":"is_dataframe_with_data(mtcars) #> [1] TRUE"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_linux.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a Linux Machine? — is_linux","title":"Is this a Linux Machine? — is_linux","text":"Linux Machine?","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_linux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a Linux Machine? — is_linux","text":"","code":"is_linux()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_linux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this a Linux Machine? — is_linux","text":"bool; TRUE linux machine FALSE linux machine.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_linux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is this a Linux Machine? — is_linux","text":"","code":"is_linux() #> [1] TRUE"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a Windows Machine? — is_windows","title":"Is this a Windows Machine? — is_windows","text":"Windows Machine?","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a Windows Machine? — is_windows","text":"","code":"is_windows()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_windows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this a Windows Machine? — is_windows","text":"bool; TRUE windows machine FALSE windows machine.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/is_windows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is this a Windows Machine? — is_windows","text":"","code":"is_windows() #> [1] FALSE"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_datekey.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a date object into a datekey integer — make_datekey","title":"Convert a date object into a datekey integer — make_datekey","text":"Datekeys can used quickly join dates data","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_datekey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a date object into a datekey integer — make_datekey","text":"","code":"make_datekey(date)"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_datekey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a date object into a datekey integer — make_datekey","text":"date date object","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_datekey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a date object into a datekey integer — make_datekey","text":"integer datekey.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_datekey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a date object into a datekey integer — make_datekey","text":"","code":"make_datekey(date = lubridate::make_date()) #> [1] 19700101"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standard timestamp — make_timestamp","title":"Create a standard timestamp — make_timestamp","text":"Create standard timestamp","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standard timestamp — make_timestamp","text":"","code":"make_timestamp()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_timestamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standard timestamp — make_timestamp","text":"character string standardized timestamp.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/make_timestamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standard timestamp — make_timestamp","text":"","code":"make_timestamp() #> [1] \"2025-04-16 01:02:30.3988\""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/rename_with_stringr.html","id":null,"dir":"Reference","previous_headings":"","what":"Squish and lowercase all variables in a dataframe — rename_with_stringr","title":"Squish and lowercase all variables in a dataframe — rename_with_stringr","text":"variables dataframe (memory, lazily evaluated) following applied: set lowercase whitespace end beginning removed whitespace inside string set single space","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/rename_with_stringr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squish and lowercase all variables in a dataframe — rename_with_stringr","text":"","code":"rename_with_stringr(.data)"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/rename_with_stringr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squish and lowercase all variables in a dataframe — rename_with_stringr","text":".data Dataframe.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/rename_with_stringr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squish and lowercase all variables in a dataframe — rename_with_stringr","text":"Dataframe modified variable names.","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/rename_with_stringr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squish and lowercase all variables in a dataframe — rename_with_stringr","text":"","code":"x <- tibble::tibble(   ChEeSeSteAk = 1:4,   \"   OH     NO  \" = 4:7,   AHHH = 7:10 )  x |>   rename_with_stringr() #> # A tibble: 4 × 3 #>   cheesesteak `oh no`  ahhh #>         <int>   <int> <int> #> 1           1       4     7 #> 2           2       5     8 #> 3           3       6     9 #> 4           4       7    10"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_linux.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip unit test if on linux — skip_if_linux","title":"Skip unit test if on linux — skip_if_linux","text":"Skip unit test linux","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_linux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip unit test if on linux — skip_if_linux","text":"","code":"skip_if_linux()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_linux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip unit test if on linux — skip_if_linux","text":"message console skipping test","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_linux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip unit test if on linux — skip_if_linux","text":"","code":"if (FALSE) { # \\dontrun{ skip_if_not_dph() } # }"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_linux.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip unit test if not on linux — skip_if_not_linux","title":"Skip unit test if not on linux — skip_if_not_linux","text":"Skip unit test linux","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_linux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip unit test if not on linux — skip_if_not_linux","text":"","code":"skip_if_not_linux()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_linux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip unit test if not on linux — skip_if_not_linux","text":"message console skipping test","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_linux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip unit test if not on linux — skip_if_not_linux","text":"","code":"if (FALSE) { # \\dontrun{ skip_if_not_dph() } # }"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip unit test if not on windows — skip_if_not_windows","title":"Skip unit test if not on windows — skip_if_not_windows","text":"Skip unit test windows","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip unit test if not on windows — skip_if_not_windows","text":"","code":"skip_if_not_windows()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_windows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip unit test if not on windows — skip_if_not_windows","text":"message console skipping test","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_not_windows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip unit test if not on windows — skip_if_not_windows","text":"","code":"if (FALSE) { # \\dontrun{ skip_if_not_windows() } # }"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip unit test if not on linux — skip_if_windows","title":"Skip unit test if not on linux — skip_if_windows","text":"Skip unit test linux","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip unit test if not on linux — skip_if_windows","text":"","code":"skip_if_windows()"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_windows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip unit test if not on linux — skip_if_windows","text":"message console skipping test","code":""},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/skip_if_windows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip unit test if not on linux — skip_if_windows","text":"","code":"if (FALSE) { # \\dontrun{ skip_if_windows() } # }"},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/succor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"succor: Common Solutions for Common Usecases — succor-package","title":"succor: Common Solutions for Common Usecases — succor-package","text":"lightweight set functions commonly encountered usecases","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/reference/succor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"succor: Common Solutions for Common Usecases — succor-package","text":"Maintainer: Alexander Senetcky alexander.senetcky@ct.gov (ORCID) [copyright holder]","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-9-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.9.0","text":"Added GHA: PR Commands Added GHA: pkgdown Added GHA: standard check","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-8-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.8.0","text":"Added doco Updated Readme","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-7-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.7.0","text":"Added unit tests","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-6-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.6.0","text":"Added time helpers","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-5-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.5.0","text":"Added test helpers","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-4-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.4.0","text":"Added string helpers","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-3-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.3.0","text":"Added succor-package.R","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-2-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.2.0","text":"Added environment helpers","code":""},{"path":[]},{"path":"https://asenetcky-r-pkgs.github.io/succor/news/index.html","id":"features-0-1-0","dir":"Changelog","previous_headings":"","what":"Features","title":"succor 0.1.0","text":"Added data helpers","code":""}]
